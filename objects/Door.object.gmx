<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
angle = 0;
minState = 0;
stateID = 0;
bgCol = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set visibility based on minState
visible = (Controller.state[stateID] &gt;= minState) &amp;&amp; Controller.colours[coltonum(image_blend)];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change alpha and use the doors
if(visible) {
    var col = bgCol;
    if(col == noone) {
        col = background_color;
    }
    if(col != image_blend) {
        if(Controller.colours[coltonum(image_blend)]) {
            if(place_meeting(x, y, Player)) {
                if(Mobile) {
                    with(Controller) {
                        virtual_key_delete(virt_key_down);
                        virt_key_down = virtual_key_add(other.x - view_xview[0], other.y - view_yview[0], other.sprite_width, other.sprite_height, vk_down);
                    }
                }
                image_alpha += 0.1;
                if(Controller.state[stateID] &gt;= minState) {
                    if(input_check_pressed(I_ACTION)) {
                        var snd = audio_play_sound(aDoor, 0, false);
                        audio_sound_gain(snd, 0.4, 0);
                        
                        if(destRM != room) {
                            state_set(S_DOOR);
                            Controller.destID = destID;
                            room_goto(destRM);
                        } else {
                            with(Door) {
                                if(thisID == other.destID) {
                                    Player.x = x;
                                    Player.y = y;
                                    Player.vspeed = 0;
                                    Player.hspeed = 0;
                                    io_clear();
                                }
                            }
                        }
                    }
                }
            } else {
                image_alpha -= 0.1;
            }
            
            image_alpha = clamp(image_alpha, 0.5, 1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the controls when touching the player
var col = image_blend;
if(!Controller.colours[coltonum(image_blend)]) {
    col = c_white;
}
if(col != background_color) {
    angle = (angle + 8) % 360;
    if(place_meeting(x, y, Player)) {
        draw_set_color(col);
        draw_set_font(fControls);
        draw_set_halign(fa_center);
        draw_text(x - view_xview[0], y - view_yview[0] - 64 + floor(sin(degtorad(angle)) * 5), DOWN_CHAR);
        draw_set_halign(fa_left);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw self
var col = image_blend;
if(!Controller.colours[coltonum(image_blend)]) {
    col = c_white;
}
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, col, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
