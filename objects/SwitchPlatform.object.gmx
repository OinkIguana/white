<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSwitchPlatfrm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>Wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 0;
angle = 0;
sparks = ds_list_create();
moved = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle the switch
if(place_meeting(x, y - 1, Player)) {
    if(Mobile) {
        with(Controller) {
            virtual_key_delete(virt_key_down);
            virt_key_down = virtual_key_add(other.x - view_xview[0], other.y - view_yview[0], other.sprite_width, other.sprite_height, vk_down);
        }
    }
    if(input_check_pressed(I_ACTION)) {
        image_index = !image_index;
        audio_play_sound(aSwitch, 0, false);
        ds_list_clear(sparks);
        state_set(S_ENTERCAVE);
        state_set(S_LIFT);
    }
} else if(image_index != 0) {
    audio_play_sound(aSwitch, 0, false);
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
if(Controller.colours[GREEN] &amp;&amp; Controller.colours[RED]) {
    if(image_index) {
        if(y &gt; high) {
            while(place_meeting(x, y - 4, Player)) {
                var go = false;
                with(Player) {
                    if(!place_meeting(x, y - 1, Wall)) {
                        go = true;
                    }
                }
                if(go) {
                    Player.y--;
                } else {
                    break;
                }
            }
            if(!place_meeting(x, y - 4, Player)) {
                y -= 4;
                if(y == high) {
                    audio_play_sound(aLand, 0, false);
                }
            } else {
                image_index = !image_index;
            }
        }
    } else if(y &lt; ystart) {
        if(collision_rectangle(x, y, x + sprite_width, ystart, Player, false, true) == noone) {
            y += 4;
            if(y == ystart) {
                audio_play_sound(aLand, 0, false);
            }
            if(place_meeting(x, y - 4 - 1, Player)) {
                with(Player) {
                    while(!place_meeting(x, y + 1, Wall)) y++;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate sparks
if(ds_exists(sparks, ds_type_list)) {
    ds_list_insert(sparks, 0, irandom_range(0, 64));
    if(ds_list_size(sparks) &gt; 8) {
        ds_list_delete(sparks, 8);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the sparks list
if(ds_exists(sparks, ds_type_list)) {
    ds_list_destroy(sparks);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prevent ineritance
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw controls when touching the player
angle = (angle + 8) % 360;
if(place_meeting(x, y - 1, Player)) {
    draw_set_color(image_blend);
    draw_set_font(fControls);
    draw_set_halign(fa_center);
    draw_text(x - view_xview[0] + 32, y - view_yview[0] - 64 + floor(sin(degtorad(angle)) * 5), DOWN_CHAR);
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blend in with the floor
inst = instance_position(x, ystart + 17, Wall);
if(inst != noone) {
    image_blend = inst.image_blend;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw sparks
if(ds_exists(sparks, ds_type_list)) {
    if(Controller.colours[GREEN] &amp;&amp; Controller.colours[RED]) {
        if(y &gt; high &amp;&amp; y &lt; ystart) {
            draw_set_color(image_blend);
            var dir = 1;
            if(image_index == 1) {
                dir = -1;
            }
            for(var i = 0; i &lt; ds_list_size(sparks); i++) {
                var yy = y - i * dir * 4 + 16 * image_index;
                if(yy == median(yy, high, ystart)) {
                    draw_point(x + sparks[| i], yy);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the dot
draw_self();

if(Controller.colours[GREEN]) {
    if(image_index) {
        draw_set_color(c_green);
    } else {
        draw_set_color(c_red);
    }
} else {
    draw_set_color(c_red);
}
if(Controller.colours[RED]) {
    draw_circle(x + 32, y, 2, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,16</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
